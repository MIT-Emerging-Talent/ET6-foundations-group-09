name: ET CI Checks

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  ls_linting:
    runs-on: ubuntu-latest
    steps:  
      - uses: actions/checkout@v4
      - uses: ls-lint/action@v2.2.3

  md_formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nosborn/github-action-markdown-cli@v3.3.0
        with:
          files: .
          config_file: .markdownlint.yml

  py_formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Python - Check Formatting
        uses: astral-sh/ruff-action@v1
        with:
          args: "format --check"

  py_linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # passing ruff linting is required
      - name: Python - Check Linting - ruff
        uses: astral-sh/ruff-action@v1

      # passing pylint is not required - discuss errors in code review
      # adapted from https://github.com/davidslusser/actions_python_pylint/tree/main
      - name: python version
        run: python --version
        shell: bash
        if: always()
      - name: install pylint
        run: |
          python -m pip install --upgrade pip
          pip install pylint
        shell: bash
      - name: Python - Check Linting - pylint
        run: "pylint solutions tests || echo '::warning title=Pylint Error(s)::Discuss solutions and trade-offs in code review.'"
        shell: bash

  py_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Determine if only Markdown files were changed
      - name: Check for non-Markdown file changes
        id: check_files
        run: |
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} > changed_files.txt
          if ! grep -qv '\.md$' changed_files.txt; then
            echo "Only Markdown files changed. Skipping py_tests."
            echo "skip=true" >> $GITHUB_ENV
          else
            echo "Non-Markdown files changed. Proceeding with py_tests."
            echo "skip=false" >> $GITHUB_ENV

      # Run Python tests only if non-Markdown files are changed
      - name: Python - Run Tests
        if: env.skip == 'false'
        run: python -m unittest
        shell: bash


